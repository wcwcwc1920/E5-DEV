/// <reference types="node" />
import { FxError, Result } from "@microsoft/teamsfx-api";
export declare type DotenvOutput = {
    [k: string]: string;
};
export declare class EnvUtil {
    readEnv(projectPath: string, env: string, loadToProcessEnv?: boolean, silent?: boolean): Promise<Result<DotenvOutput, FxError>>;
    writeEnv(projectPath: string, env: string, envs: DotenvOutput): Promise<Result<undefined, FxError>>;
    listEnv(projectPath: string): Promise<Result<string[], FxError>>;
    object2map(obj: DotenvOutput): Map<string, string>;
    map2object(map: Map<string, string>): DotenvOutput;
}
export declare const envUtil: EnvUtil;
declare type DotenvParsedLine = string | {
    key: string;
    value: string;
    comment?: string;
};
export interface DotenvParseResult {
    lines?: DotenvParsedLine[];
    obj: DotenvOutput;
}
export declare class DotenvUtil {
    deserialize(src: string | Buffer): DotenvParseResult;
    serialize(parsed: DotenvParseResult): string;
}
export declare const dotenvUtil: DotenvUtil;
export {};
//# sourceMappingURL=envUtil.d.ts.map