"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VxTestAppCheckError = exports.BackendExtensionsInstallError = exports.GlobalFuncNodeNotMatchedError = exports.PortableFuncNodeNotMatchedError = exports.LinuxNotSupportedError = exports.NodeNotRecommendedError = exports.NodeNotSupportedError = exports.NodeNotFoundError = exports.DepsCheckerError = void 0;
class DepsCheckerError extends Error {
    constructor(message, helpLink) {
        super(message);
        this.helpLink = helpLink;
        Object.setPrototypeOf(this, DepsCheckerError.prototype);
    }
}
exports.DepsCheckerError = DepsCheckerError;
class NodeNotFoundError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, NodeNotFoundError.prototype);
    }
}
exports.NodeNotFoundError = NodeNotFoundError;
class NodeNotSupportedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, NodeNotSupportedError.prototype);
    }
}
exports.NodeNotSupportedError = NodeNotSupportedError;
class NodeNotRecommendedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, NodeNotRecommendedError.prototype);
    }
}
exports.NodeNotRecommendedError = NodeNotRecommendedError;
class LinuxNotSupportedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, LinuxNotSupportedError.prototype);
    }
}
exports.LinuxNotSupportedError = LinuxNotSupportedError;
class PortableFuncNodeNotMatchedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, PortableFuncNodeNotMatchedError.prototype);
    }
}
exports.PortableFuncNodeNotMatchedError = PortableFuncNodeNotMatchedError;
class GlobalFuncNodeNotMatchedError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, GlobalFuncNodeNotMatchedError.prototype);
    }
}
exports.GlobalFuncNodeNotMatchedError = GlobalFuncNodeNotMatchedError;
class BackendExtensionsInstallError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, BackendExtensionsInstallError.prototype);
    }
}
exports.BackendExtensionsInstallError = BackendExtensionsInstallError;
class VxTestAppCheckError extends DepsCheckerError {
    constructor(message, helpLink) {
        super(message, helpLink);
        Object.setPrototypeOf(this, VxTestAppCheckError.prototype);
    }
}
exports.VxTestAppCheckError = VxTestAppCheckError;
//# sourceMappingURL=depsError.js.map